@page "/comments"
@using Microsoft.AspNetCore.Components.Forms
@using System.Collections.Generic
@using System


<h3>Comments</h3>

@if (comments.Count == 0)
{
    <p>No comments yet.</p>
}
else
{
    @foreach (var comment in comments)
    {
        <div class="comment">
            <p><strong>User ID:</strong> @comment.UserId</p>
            <p><strong>Comment:</strong> @comment.CommentText</p>
            <p><strong>Created:</strong> @comment.Created.ToString("yyyy-MM-dd HH:mm:ss")</p>
        </div>
    }
}

<EditForm Model="@newComment" OnValidSubmit="@HandleSubmit" formname="commentForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="userId">User ID:</label>
        <InputText id="userId" @bind-Value="@newComment.UserId" class="form-control" />
        <ValidationMessage For="@(() => newComment.UserId)" />
    </div>

    <div class="form-group">
        <label for="commentText">Comment:</label>
        <textarea id="commentText" @bind="@newComment.CommentText" class="form-control" rows="4"></textarea>
        <ValidationMessage For="@(() => newComment.CommentText)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>
@code {
    List<Commentss> comments = new List<Commentss>();
    Commentss newComment = new Commentss();

    async Task HandleSubmit(EditContext editContext)
    {
        if (editContext.Validate())
        {

            AddComment();
        }
        else
        {

        }
    }

    void AddComment()
    {
        // Add the new comment to the list
        comments.Add(newComment);

        // Clear the new comment
        newComment = new Commentss();
    }
}
