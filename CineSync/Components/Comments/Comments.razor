@rendermode InteractiveServer

@using CineSync.Components.Utils;
@using CineSync.Components.Utils.Authorization;
@using CineSync.Components.Buttons;
@using CineSync.Data.Models;

<RoleCkeck AuthenticatedUserRoles="@AuthenticatedUserRoles" Roles="@( new string[] { "user","moderador","admin","super_admin" } )">
	<PassOneCheck>
    <div class="comment-section">
        <h4>Add a Comment</h4>
        <textarea @bind="comment.Content"></textarea>
        <div class="input-container">
            <label class="file-input-button" for="file-upload">
                <img id="attachment" src="AttachmentIcon.png" alt="Attach" />
            </label>
            <InputFile id="file-upload" class="file-input" OnChange="HandleFileSelected" multiple accept="image/*" style="display:none" />
            <button type="submit" @onclick="HandleSubmit">Comment</button>
        </div>
        @foreach ( string ErrorMessage in ErrorMessages)
        {
            <p class="error">@ErrorMessage</p>
        }
        @foreach ( var kvp in selectedFilesWithPreviews )
        {
            <div class="selected-file">
                Selected file: @kvp.Key.Name
                <img src="@( ImageConverter.ConverBytesTo64( kvp.Value ) )" alt="@kvp.Key.Name" />
            </div>
        }
    </div>
    </PassOneCheck>
</RoleCkeck>

<div class="comments-done">

    @foreach (var comment in CommentsList)
    {
        Comment localComment = comment;
        <ItemComment 
            Comment="localComment" 
            OnRemove="() => { CommentsList.Remove(localComment); InvokeAsync(StateHasChanged); }"
            Liked="@( LikedComments.Any( uLike => uLike.CommentId == localComment.Id ) )"
            DisLiked="@( DislikedComments.Any( uDisLike => uDisLike.CommentId == localComment.Id ) )">
        </ItemComment>
    }

    @if (CommentsList != null && CommentsList.Count == 0)
    {
        <div class="nocomments">There is no comments at this time.</div>
    }

</div>

