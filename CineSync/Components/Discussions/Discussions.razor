@using CineSync.Components.Utils.Authorization
@using CineSync.Components.Buttons
@using CineSync.Components.Comments
@using CineSync.Data.Models

<RoleCkeck AuthenticatedUserRoles="@_authenticatedUserRoles" Roles="@( new string[] { "user","moderador","admin","super_admin" } )">
    <PassOneCheck>     
        <div class="add-discussion-containor" >
            <NewDiscussion @ref="@_newDiscussion"></NewDiscussion>
            <RectColoredButton Text="Start" OnClick="StartDiscussion"></RectColoredButton>
        </div>
    </PassOneCheck>
</RoleCkeck>
<div class="discussions">

    @if (_movieDiscussions == null)
    {
        <CineSync.Components.Layout.Loading></CineSync.Components.Layout.Loading>
    }
    else if (_movieDiscussions.Count == 0)
    {
        <div class="nocomments">There is no Discussions at this time.</div>
    }
    else
    {
        @foreach ( Discussion discussion in _movieDiscussions)
        {
            <ItemDiscussion 
                Discussion="@discussion"
                OnChange="() => { InvokeAsync(StateHasChanged); }"
                Liked="@( LikedDiscussions.Any( uLike => uLike.Discussion.Equals(discussion) ) )"
                DisLiked="@( DislikedDiscussions.Any( uDisLike => uDisLike.Discussion.Equals( discussion) ) )"
                LikedDiscussions="@LikedDiscussions"
                DislikedDiscussions="@DislikedDiscussions"
                OnRemove="(id) => { _movieDiscussions = _movieDiscussions.Where(d=>d.Id != id).ToList(); }">
            </ItemDiscussion>
        }
    }
   
</div>