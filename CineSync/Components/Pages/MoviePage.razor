@page "/MovieDetails/{MovieId:int}/{Tab?}"
@rendermode InteractiveServer

@using CineSync.Components.Layout
@using CineSync.Components.Utils
@using CineSync.Components.Utils.Authorization
@using CineSync.Components.Comments
@using CineSync.Components.Discussions
@using CineSync.Components.PopUps
@using CineSync.Components.Buttons
@using Microsoft.AspNetCore.SignalR.Client

<PageLayout
	@ref="@_pageLayout"
	GetInstance="GetPageLayout"
>
	@if (_initialized)
	{
		@if (_isInvalid)
		{
			<div class="w-100 h-100" style="background-image: url('BackgorundHome.webp');">
				<div class="p-2 w-100 h-100 d-flex justify-content-center align-items-center">
					<div class="bg-dark w-100 h-100 d-flex align-items-center justify-content-center text-center" style="--bs-bg-opacity: .5; --bs-dark-rgb: 0,0,0; border-radius: 25px;">
						<span class="text-white display-5 user-select-none">The content you are trying to access is unavailable.</span>
					</div>
				</div>
			</div>
		}
		else
		{
			<CascadingValue Value="_pageLayout" Name="PageLayout" TValue="PageLayout">

				<CascadingValue Value="DiscussionHubConnection" Name="DiscussionHubConnection" TValue="HubConnection">

					<div class="page-main-Conteiner">

						@if (Movie != null)
						{
							<div class="top-content">

								<div class="conteiner-left">

									<div >
										@if (Movie.PosterImage != null)
										{
											<img id="PosterImage" src="@(ImageConverter.ConverBytesTo64(Movie.PosterImage))" class="movie-pic">
										}
										else
										{
											<img id="PosterImage" src="NoPoster.png" class="movie-pic">
										}
									</div>

									<div class="movie-image-options-conteiner">

										<div class="buttonTreiler">
											@if (Movie.TrailerKey != null)
											{
												<button class="BtnTrailer" @onclick="() => { VideoTrailer.Open(); }">Trailer</button>
												<VideoTrailer @ref="VideoTrailer" TrailerLink=@($"{_youtubeLink}{Movie.TrailerKey}")/>
											}
											else
											{
												<span>No Trailer</span>
											}
										</div>

										<RoleCkeck AuthenticatedUserRoles="@_userRoles" Roles="@(new string[] { "user", "moderator", "admin", "super_admin" })">
											<PassOneCheck>

												<div class="movie-image-options-item-rigth">
													<button class="button-AddToCollection" data-toggle="modal" data-target="#AddCollection">
														<svg class="itemsize button-AddToCollectionSpace" width="31" height="31" viewBox="0 0 31 31" fill="currentcolor" xmlns="http://www.w3.org/2000/svg">
															<g clip-path="url(#clip0_307_2441)">
																<path d="M21.3125 21.3125H17.4375V23.25H21.3125V27.125H23.25V23.25H27.125V21.3125H23.25V17.4375H21.3125V21.3125ZM15.0311 17.4375C16.1224 15.8052 17.7326 14.589 19.6012 13.9859C21.4697 13.3828 23.4872 13.4281 25.3268 14.1144C27.1664 14.8007 28.7205 16.0878 29.7375 17.7674C30.7544 19.447 31.1747 21.4207 30.9302 23.3689C30.6857 25.3171 29.7908 27.1257 28.3903 28.5019C26.9898 29.8781 25.1659 30.7413 23.2137 30.9517C21.2615 31.1621 19.2955 30.7075 17.6339 29.6613C15.9724 28.6152 14.7126 27.0388 14.0585 25.1875H11.625V23.25H13.6148C13.472 21.9413 13.6243 20.6172 14.0604 19.375H11.625V17.4375H15.0311ZM3.875 7.75V5.8125H7.75V7.75H3.875ZM11.625 7.75V5.8125H27.125V7.75H11.625ZM11.625 13.5625V11.625H27.125V13.5625H11.625ZM3.875 13.5625V11.625H7.75V13.5625H3.875ZM3.875 19.375V17.4375H7.75V19.375H3.875ZM3.875 25.1875V23.25H7.75V25.1875H3.875Z" fill="currentcolor"/>
															</g>
															<defs>
																<clipPath id="clip0_307_2441">
																	<rect width="31" height="31" fill="currentcolor"/>
																</clipPath>
															</defs>
														</svg>
													</button>
													<AddCollection MovieID="@Movie.Id"/>

												</div>

											</PassOneCheck>
										</RoleCkeck>

									</div>

								</div>

								<div clss="conteiner-rigth">

									<div class="movie-Title">
										@Movie.Title
									</div>

									<div class="movie-statistics">
										<div class="movie-statistics-item">
											<div class="movie-statistics-item-key">Release Date:</div>
											<div class="movie-statistics-item-value">@(Movie.ReleaseDate.HasValue ? Movie.ReleaseDate.Value.ToString("yyyy-MM-dd") : "Not Available")</div>
										</div>
										<div class="movie-statistics-item">
											<div class="movie-statistics-item-key">Duration:</div>
											<div class="movie-statistics-item-value">@Movie.RunTime min</div>
										</div>
									</div>

									<div class="movie-Plot text-justify">
										@Movie.Overview
									</div>

									@if (Movie.Genres != null && Movie.Genres.Count != 0)
									{
										<div class="movie-genres">
											<div class="movie-genres-key">Genres:</div>
											<div class="movie-genres-value">
												@for (int i = 0; i < @Movie.Genres.Count() - 1; i++)
												{
													@($"{@Movie.Genres.ElementAt(i).Name}, ")
												}
												@($"{@Movie.Genres.Last().Name}")
											</div>
										</div>
									}

									@if (Movie.Cast != null && Movie.Cast.Count != 0)
									{
										<div class="movie-cast">
											<div class="movie-genres-key">Cast:</div>
											<div class="movie-genres-value">
												@for (int i = 0; i < @Movie.Cast.Count() - 1; i++)
												{
													@($"{@Movie.Cast.ElementAt(i)}, ")
												}
												@($"{@Movie.Cast.Last()}")

											</div>
										</div>
									}


									<div class="rating-conteinor">

										<div class="rating-item">
											<div class="font-rating">IMDB</div>
											<div class="font-rating-result">@((float)Math.Round(Movie.Rating, 1))</div>
											<div class="rating-icon">
												<svg id="IMDBRating" width="10" height="10" xmlns="http://www.w3.org/2000/svg" class="ipc-icon ipc-icon--star-inline" viewBox="0 0 24 24" fill="yellow" role="presentation"><path d="M12 20.1l5.82 3.682c1.066.675 2.37-.322 2.09-1.584l-1.543-6.926 5.146-4.667c.94-.85.435-2.465-.799-2.567l-6.773-.602L13.29.89a1.38 1.38 0 0 0-2.581 0l-2.65 6.53-6.774.602C.052 8.126-.453 9.74.486 10.59l5.147 4.666-1.542 6.926c-.28 1.262 1.023 2.26 2.09 1.585L12 20.099z"></path></svg>
											</div>
										</div>

										<div class="rating-item">
											<div class="font-rating">CS</div>
											<div class="font-rating-result">@((float)Math.Round(Movie.RatingCS, 1))</div>
											<div class="rating-icon">
												<img class="CsRating" src="CsRating.png" alt="Alternate Text"/>
											</div>
										</div>

										<RoleCkeck AuthenticatedUserRoles="@_userRoles" Roles="@(new string[] { "user", "moderator", "admin", "super_admin" })">
											<PassOneCheck>
												<div class="ButtonRatingitem-container">
													@if (!_hasRatedMovie)
													{
														<button class="ButtonRatingitem" data-toggle="modal" data-target="#RateModel"> Rate Movie</button>
														<Classification MovieAPIId=@MovieId MovieId="@Movie.Id" OnRatingSaved="OnRatingSaved"/>
													}
													else
													{
														<span class="Rated">Rated</span>
													}
												</div>
											</PassOneCheck>
										</RoleCkeck>

									</div>

								</div>

							</div>

							<div class="page-bottom">

								<TabButtonsBar @ref="@_TabBar" ActiveTab="_initialTab" OnTabChange="OnTabChange" TabNames="@_tabNames"
								               Background_Style="background: linear-gradient( to top, rgba(0,0,0,1), rgba(0,0,0,0) ) !important"/>

								<div class="page-bottom-content">

									@if (_activeTab == _tabNames[0]) //comments
									{

										<Comments
											OnCreateDiscussion="@(() => { _TabBar.ChangeTab("Discussions"); })"
											MovieId=@MovieId
											LikedComments="@_likedComents"
											DislikedComments="@_dislikedComents">
										</Comments>

									}
									else if (_activeTab == _tabNames[1]) //Discussions
									{

										<Discussions
											MovieId=@MovieId
											LikedDiscussions="@_likedDiscussion"
											DislikedDiscussions="@_dislikedDiscussions">
										</Discussions>
									}
								</div>

							</div>

						}
					</div>

				</CascadingValue>

			</CascadingValue>
		}
	}
	else
	{
		<div class="w-100 h-100" style="background-image: url('BackgorundHome.webp') ">
			<Loading></Loading>
		</div>
		Initialize();
	}

</PageLayout>

<script>
	function updateUrl(movieId,tab) {
		const newUrl = new URL(window.location);
		newUrl.pathname = `/MovieDetails/${movieId}/${tab}`;
		window.history.pushState({}, '', newUrl);
	}
</script>
