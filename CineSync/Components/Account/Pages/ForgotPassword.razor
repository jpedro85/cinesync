@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using CineSync.Core.Email
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using CineSync.Data
@using CineSync.DbManagers

@inject UserManager<ApplicationUser> UserManager
@inject UserManager DbUserManager
@inject IEmailSender EmailSender
@inject NavigationManager NavigationManager

<div style="background-color:rgb(0 164 255); height:100vh;">

    <div class="navbar">
        <div class="navbar-left">

            <NavLink href="/">
                <div class="home-button">
                    <div class="navbar-item-conteiner">
                        <img class="Minilogo" src="MiniLogo.png" alt=" CineSync MiniLogo">
                    </div>
                    <div class="navbar-item-conteiner navbar-title">CineSync</div>
                </div>
            </NavLink>

        </div>
        <div class="navbar-rigth">

            <div class="navbar-item-conteiner">
                <NavLink href="/">
                    <button class="login-button">Home</button>
                </NavLink>
            </div>        

        </div>
    </div>

    <div class="page">
        <div class="main-content">
            <div class="form-container">
                <h1 class="text-center text-white">Forgot your password?</h1>
                <div class="row">
                    <StatusMessage Message="@message"/>
                    <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                        <DataAnnotationsValidator/>
                        <hr class="text-white"/>
                        <ValidationSummary class="text-danger" role="alert"/>
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
                            <label for="email" class="form-label">Email</label>
                            <ValidationMessage For="() => Input.Email" class="text-danger"/>
                        </div>
                        <button type="submit" class="w-100 btn btn-lg btn-primary">Reset password</button>
                    </EditForm>

                </div>
            </div>
        </div>
        <div class="logo-container-main">
                <img id="logo" src="../logo.png" alt="CineSync Main Logo">
        </div>
    </div>
</div>


@code {
    [SupplyParameterFromForm] 
    private InputModel Input { get; set; } = new();

    private string message = string.Empty;

    private async Task OnValidSubmitAsync()
    {
        message = string.Empty;
        // var user = await DbUserManager.GetFirstByConditionAsync(u => u.Email == Input.Email);
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            message = "Please check your email to reset your password.";
            return;
        }

        await SendConfirmationEmailLinkAsync(user);

        message = "Please check your email to reset your password.";
    }

    private async Task SendConfirmationEmailLinkAsync(ApplicationUser user)
    {
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        var templatePath = Path.Combine(Directory.GetCurrentDirectory(), "EmailTemplates", "ForgotPassword.html");
        var htmlTemplate = await System.IO.File.ReadAllTextAsync(templatePath);

        var emailContent = htmlTemplate
            .Replace("{{callbackUrl}}", HtmlEncoder.Default.Encode(callbackUrl));

        
        await EmailSender.SendEmailAsync(user.Email, "Reset Password", emailContent);
    }

    private sealed class InputModel
    {
        [Required] 
        [EmailAddress] 
        public string Email { get; set; } = "";
    }

}