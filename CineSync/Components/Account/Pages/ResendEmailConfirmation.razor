@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using CineSync.Data
@using CineSync.Core.Email

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender EmailSender
@inject NavigationManager NavigationManager

<div class="page d-flex justify-content-center">
    <div class="main-content justify-content-center">
        <div class="form-container">
            <h1 class="text-white text-center">Resend email confirmation</h1>
            <StatusMessage Message="@message"/>
            <hr class="text-white"/>
            <div class="row">
                <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
                    <DataAnnotationsValidator/>
                    <ValidationSummary class="text-danger" role="alert"/>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Email" class="form-control" aria-required="true" placeholder="name@example.com"/>
                        <label for="email" class="form-label">Email</label>
                        <ValidationMessage For="() => Input.Email" class="text-danger"/>
                    </div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Resend</button>
                </EditForm>
            </div>
        </div>
        <div class="logo-container-main">
            <img id="logo" src="../logo.png" alt="CineSync Main Logo">
        </div>
    </div>

</div>

@code {

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private string? message;

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Verification email sent. Please check your email.";
            return;
        }

        SendConfirmationEmailLinkAsync(user);

        message = "Verification email sent. Please check your email.";
    }

    private async Task SendConfirmationEmailLinkAsync(ApplicationUser user)
    {
        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });

        var templatePath = Path.Combine(Directory.GetCurrentDirectory(), "EmailTemplates", "Register.html");
        var htmlTemplate = await System.IO.File.ReadAllTextAsync(templatePath);

        var emailContent = htmlTemplate
            .Replace("{{callbackUrl}}", HtmlEncoder.Default.Encode(callbackUrl));
        
        await EmailSender.SendEmailAsync(user.Email, "Confirm Your Account", emailContent);
    }

    private sealed class InputModel
    {
        [Required] [EmailAddress] public string Email { get; set; } = "";
    }

}